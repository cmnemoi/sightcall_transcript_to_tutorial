services:

  db:
    image: postgres:alpine
    container_name: sightcall_postgres_db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: appdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d appdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: sightcall_fastapi_backend
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
    networks:
      - app_network
    extra_hosts:
      - host.docker.internal:host-gateway

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: sightcall_react_frontend
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - app_network
    stdin_open: true 
    tty: true
    extra_hosts:
      - host.docker.internal:host-gateway

volumes:
  postgres_data:
    driver: local

networks:
  app_network:
    driver: bridge
